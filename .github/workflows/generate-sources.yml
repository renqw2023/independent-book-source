name: 自动生成书源文件

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # 每天凌晨2点自动运行
    - cron: '0 2 * * *'
  workflow_dispatch:
    # 允许手动触发

jobs:
  generate-sources:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
    
    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install aiohttp beautifulsoup4 lxml requests jsonpath-ng
        # 尝试安装可选依赖，失败也不影响
        pip install js2py || echo "js2py安装失败，JavaScript功能将被禁用"
        pip install html5lib pyquery || echo "可选依赖安装失败"
    
    - name: 生成书源文件
      run: |
        # 创建输出目录
        mkdir -p output/individual

        # 生成所有书源
        echo "开始生成书源文件..."
        if python src/main.py --generate-all --output output; then
          echo "✅ 书源生成成功"
        else
          echo "⚠️ 主生成失败，尝试生成番茄小说..."
          python src/main.py --generate fanqie --output output || echo "❌ 番茄小说生成也失败"
        fi

        # 生成单独的书源文件
        echo "生成单独书源文件..."
        python src/main.py --generate fanqie --output output/individual || echo "⚠️ 单独生成失败"

        # 创建书源信息文件
        echo "生成时间: $(date)" > output/build_info.txt
        echo "提交哈希: ${{ github.sha }}" >> output/build_info.txt
        echo "分支: ${{ github.ref_name }}" >> output/build_info.txt

        # 显示生成结果
        echo "=== 生成结果 ==="
        ls -la output/ || echo "输出目录为空"
    
    - name: 验证书源文件
      run: |
        # 检查文件是否存在
        ls -la output/ || echo "输出目录不存在"

        # 验证JSON格式（如果文件存在）
        if [ -f "output/legado_sources.json" ]; then
          python -c "import json; json.load(open('output/legado_sources.json')); print('✅ 书源文件格式正确')" || echo "JSON格式验证失败"
          python -c "import json; data=json.load(open('output/legado_sources.json')); print(f'📚 生成了 {len(data)} 个书源')" || echo "书源数量统计失败"
        else
          echo "⚠️ 主书源文件不存在"
        fi
    
    - name: 提交生成的文件
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 添加生成的文件
        git add output/
        
        # 检查是否有变化
        if git diff --staged --quiet; then
          echo "没有文件变化，跳过提交"
        else
          git commit -m "🤖 自动生成书源文件 $(date '+%Y-%m-%d %H:%M:%S')"
          git push
        fi
    
    - name: 创建Release（仅在主分支）
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: 书源文件 v${{ github.run_number }}
        body: |
          ## 📚 自动生成的书源文件
          
          **生成时间**: ${{ steps.date.outputs.date }}
          **提交哈希**: ${{ github.sha }}
          
          ### 📥 导入方式
          
          #### 方式1: 直接链接导入（推荐）
          ```
          https://raw.githubusercontent.com/${{ github.repository }}/main/output/legado_sources.json
          ```
          
          #### 方式2: 下载文件导入
          下载 `legado_sources.json` 文件，然后在legado中导入
          
          ### 📋 包含的书源
          - 🍅 番茄小说（免费）
          
          ### 🔄 更新说明
          - 书源文件每天自动更新
          - 如有问题请提交Issue
          
        files: |
          output/legado_sources.json
          output/individual/*.json
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
